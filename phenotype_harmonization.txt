library(dplyr)
library(SeqArray)
"%notin%" <- Negate("%in%")

phenotype <- read.csv("/nfs/beluga0_home/DATA/NIAGADS/NG00020/NG00020_LOAD_phenotype_files/NG00020_LOAD_phenotype/phenotype/2009_08_24_phenotype_data.csv", header = TRUE)
nrow(phenotype)
#[1] 5220


# Add APOE genotype info to phenotype file
APOE <- read.csv("/nfs/beluga0_home/DATA/NIAGADS/NG00020/NG00020_LOAD_phenotype_files/NG00020_LOAD_phenotype/phenotype/2009_12_17 APOE results.csv", header = TRUE)


head(phenotype$SUBJ_NO)
#[1] 100001 100101 100102 100103 100104 100201

head(APOE)
nrow(APOE)
#[1] 5220

head(APOE$CIDR2_Subj_No)
#[1] 104707 110909 138401 140101 132701 152605

sum(phenotype$SUBJ_NO %in% APOE$CIDR2_Subj_No) == sum(APOE$CIDR2_Subj_No %in% phenotype$SUBJ_NO)
#[1] TRUE


phenotype <- merge(phenotype, APOE[,c("CIDR2_Subj_No", "Translated_Allele1", "Translated_Allele2")], by.x = "SUBJ_NO", by.y = "CIDR2_Subj_No")
nrow(phenotype)
#[1] 5220

colnames(phenotype)


# Add site info to phenotype file
#I can't find this info.
#2008_08_20_subjectlisting.csv has info on consent source, but that doesn't seem to be the site of original recruitment.


# Add age samples info to phenotype file
sampled <- read.csv("/nfs/beluga0_home/DATA/NIAGADS/NG00020/NG00020_LOAD_phenotype_files/NG00020_LOAD_phenotype/phenotype/2009_11_16\ Age\ and\ Source\ File.csv", header = TRUE)
nrow(sampled)
#[1] 9388

sum(duplicated(sampled$SUBJ_NO))
#[1] 0
#Since no samples are duplicated, will just merge with pheontype and drop any subjects not in the phenotype file

phenotype <- merge(phenotype, sampled[,c("SUBJ_NO", "Sampled.Age")], by = "SUBJ_NO", all.x = TRUE, all.y = FALSE)

sum(is.na(phenotype$sampled.age))
#[1] 0



#Add missing gds ID to phenotype 
gds <- seqOpen("/nfs/beluga0_home/ANALYSIS/NIAGADS/NG00020/LOAD_families_010413_genotyped.gds")
gds.id <- seqGetData(gds, "sample.id")

id_missing <- gds.id[!(gds.id %in% phenotype$SUBJ_NO)]
id_missing
#[1] 300101
sub_row <- phenotype[1, ]
sub_row[1, ] <- NA
sub_row$SUBJ_NO <- id_missing
phenotype <- rbind(phenotype, sub_row)
#Reorder phenotype to match gds order
phenotype <- phenotype[match(gds.id, phenotype$SUBJ_NO), ]
nrow(phenotype)
#[1] 5221



# Define APOE E2, E3, and E4 variables
#make E2 and E4 columns and check E2, E3, and E4 sum to 2
#Check genotypes
unique(phenotype$Translated_Allele1)
#[1] E4 E3 E2
unique(phenotype$Translated_Allele2)
#[1] E4 E3 E2

#create E2 column (count of E2 alleles)
phenotype$E2 <- ifelse(phenotype$Translated_Allele1 == "E2" & phenotype$Translated_Allele2 == "E2", 2, ifelse(phenotype$Translated_Allele1 == "E2" | phenotype$Translated_Allele2 == "E2", 1, 0))
#Create E4 column:
phenotype$E4 <- ifelse(phenotype$Translated_Allele1 == "E4" & phenotype$Translated_Allele2 == "E4", 2, ifelse(phenotype$Translated_Allele1 == "E4" | phenotype$Translated_Allele2 == "E4", 1, 0))
#Create E3 column:
phenotype$E3 <- ifelse(phenotype$Translated_Allele1 == "E3" & phenotype$Translated_Allele2 == "E3", 2, ifelse(phenotype$Translated_Allele1 == "E3" | phenotype$Translated_Allele2 == "E3", 1, 0))

#check if genotype counts of E2, E4, and E3 sum to 2 for every individual:
nrow(phenotype[rowSums(phenotype[c("E2","E3","E4")]) != 2,])
#[1] 1 #This is the one dummy sample we added to match the gds


#Create an E4 carrier or not carrier column:
phenotype$E4_carrier <- ifelse(phenotype$E4 == 0, 0, 1)
table(phenotype$E4_carrier, useNA = "ifany")
#   0    1 <NA>
#2371 2849    1


#Create an E4 heterozygote or homozygote column
phenotype$E4_het_hom <- ifelse(phenotype$E4 == 2, 1, ifelse(phenotype$E4 == 1, 0, NA)) #0 for heterozygotes, 1 for homozygotes, NA for non-carriers
table(phenotype$E4_het_hom, useNA = "ifany") #Note: 1 = homozygote
#   0    1 <NA>
#2305  544 2372



#Convert sex variable to 0,1 (If I want to use Topmed Pipeline, it expects binary varaibles in this format
#And change race and ethnicity to categorical
phenotype <- phenotype %>%
    mutate(SEX=c("1"="1", "2"="0")[as.character(SEX)],
           Race=c("1"="White", "2"="Black", "3"="AI_AN", "4"="Asian_PI", "50"="Other")[as.character(Race)],
           Hispanic=c("1"="yes", "2"="no")[as.character(Hispanic)]
           )


######### If Testing Age at Onset #############
# Read in list of samples that have phenotypes (and were incldued in PCs and GRM
phen_in_PCs <- readRDS("/nfs/beluga0_home/ANALYSIS/NIAGADS/NG00020/pcs_grm_pheno_only/out/pheno_list.rds")
length(phen_in_PCs)
#[1] 4562



# Examine AgeAtLastEval and Sampled columns for controls and create an age_censored column
#Just look at samples who have an outcome and will be included in analysis (note: jsut for visualization. use the full dataframe for anything I save)
phenotype_sub <- phenotype[phenotype$SUBJ_NO %in% phen_in_PCs,]

table(phenotype$Case_Control, useNA = "ifany")
#   0    1 <NA>
#2244 2320  656

table(phenotype_sub$Case_Control, useNA = "ifany")
#   0    1
#2243 2319



#What percent of controls we are using have an age at last evaluation (our gold standard)
sum(!is.na(phenotype_sub$AgeAtLastEval) & phenotype_sub$Case_Control == 0)/sum(phenotype_sub$Case_Control==0) #note: !is.na(merged.phen$Case_Control) and !is.na(phenotype$E2) are used to make sure we're only considering samples that will be included in analysis
# [1] 0.4413732 ... 44% of controls in study that have an AgeAtLastEval
#For the controls that don't have an AgeAtLastEval, need an age sampled value!???

##Examine AgeDem (age of onset of dementia) for cases:
sum(is.na(phenotype_sub$AgeDem) & phenotype_sub$Case_Control==1)
#[1] 10 
phenotype_sub[is.na(phenotype_sub$AgeDem) & phenotype_sub$Case_Control==1, "AgeDxDem"]
#~half of these are NA
#Since there are just a few cases missing AgeDem, will just exclude from association testing for AAO

#plot AgeDxDem by AgeDem
unique(phenotype_sub$AgeDem)
#999=missing/unknown
#Set to NA instead:
phenotype$AgeDem <- ifelse(phenotype$AgeDem == 999, NA, phenotype$AgeDem)

unique(phenotype_sub$AgeDxDem)
#999=missing/unknown
phenotype$AgeDxDem <- ifelse(phenotype$AgeDxDem == 999, NA, phenotype$AgeDxDem)

pdf("~/NIAGADS/plots_and_charts/AgeDxDem_by_AgeDem.pdf")
plot(jitter(phenotype$AgeDxDem, 1)~jitter(phenotype$AgeDem, 1), xlab="age of onset", ylab="age diagnosed", main = "Age of Diagnosis by Age of Onset", jitter = 0.1)
dev.off()
#Points below the 45 deg line have and age of diangosis before age of onset of dementia... doesn't make sense so will removed
#Points far above the 45 deg line have an age of diagnosis long after the age of onset of dementia... unlikely to be very precise (we will remove people for whom this difference is more than 10 yrs)

#make censored_age column and check for illogical AAO
phenotype$censored_age <- ifelse(phenotype$Case_Control == 1, phenotype$AgeDem, ifelse(phenotype$Case_Control==0 & !is.na(phenotype$AgeAtLastEval), phenotype$AgeAtLastEval, phenotype$Sampled.Age))
#This assigns censored_age the the age of onset of dementia for cases and the age at last evaluation for controls. If controls don't have an age at last evaluation, the age sampled is used instead... the availability of each variable is plotted in step 4c. All NAs for Case_control become NA for censored_age

phenotype_sub <- phenotype[phenotype$SUBJ_NO %in% phen_in_PCs,]
sum(is.na(phenotype_sub$censored_age))
#[1] 17 #Number of cases who don't have an censored_age value. Since this is a small number, will just excldue
no_censored_age <- phenotype[is.na(phenotype$censored_age), "SUBJ_NO"]
length(no_censored_age)
#[1] 675 #Includes the people with no phenotypes

#find # of cases without an age of diagnosis
sum(phenotype_sub$Case_Control ==1 & is.na(phenotype_sub$AgeDxDem), na.rm = TRUE)
#[1] 362 #cases that don't have an age of diangosis, they will be included anyway


#Find AAO that are illogical or too long after AAO
#Age of diagnosis before age of onset
sum(phenotype_sub$censored_age > phenotype_sub$AgeDxDem, na.rm = TRUE)
#[1] 12 #There are 12 cases who have diagnoses before censoring age (ie. before AAO). They will be excluded
illogical_censor <- phenotype_sub[phenotype_sub$censored_age > phenotype_sub$AgeDxDem & phenotype_sub$Case_Control == 1, "SUBJ_NO"]
#count how many AgeDxDem are >10 yr after censored_age
sum(phenotype_sub$censored_age + 10 < phenotype_sub$AgeDxDem, na.rm = TRUE)
#[1] 121
late_diag <- phenotype_sub[phenotype_sub$censored_age + 10 < phenotype_sub$AgeDxDem, "SUBJ_NO"]

#Find controls with an age of dementia (should be 0):
sum(phenotype_sub$Case_Control==0 & !is.na(phenotype_sub$AgeDem))
#[1] 1
control_w_AgeDxDem <- phenotype[phenotype_sub$Case_Control==0 & !is.na(phenotype_sub$AgeDem), "SUBJ_NO"]


#Combine vectors of all people to exclude from AD and AAO studies based on illogical or incomplete censored_age data
exclude_from_AD_AAO <- c(illogical_censor, late_diag, control_w_AgeDxDem, no_censored_age)
exclude_from_AD_AAO <- exclude_from_AD_AAO[!is.na(exclude_from_AD_AAO) & !duplicated(exclude_from_AD_AAO)]
length(exclude_from_AD_AAO)
[1] 808

#Set AAO for these people to NA
phenotype$censored_age <- ifelse(phenotype$SUBJ_NO %notin% exclude_from_AD_AAO, phenotype$censored_age, NA)
sum(is.na(phenotype$censored_age))
[1] 808

saveRDS(exclude_from_AD_AAO, "samples_exclude_from_AD_AAO.rds")


# Add survival data
library(survival) #Note: this won't load if GENESIS is loaded!

#Get residuals from cox-PH regression
phenotype$surv <- Surv(time=phenotype$censored_age, event=phenotype$Case_Control)

table(phenotype$surv)
#...
#  95  95+   96  96+   98  98+  99+ 100+ 101+ 102+ 103+  NA?   NA
#   4    9    2    6    3    5    1    2    5    1    2  657  151
#657+151
#[1] 808

coxreg <- coxph(formula = surv~1, data=phenotype)
Dev_Res <- residuals(object=coxreg, type="deviance", weighted=FALSE)
names(Dev_Res) #Note, NAs are excluded, so must merge to phenotypype by name

##Add deviance residuals to phenotype data
phenotype <- merge(phenotype, as.data.frame(Dev_Res), by=0, all.x=TRUE)
#Remove row names column:
phenotype <- phenotype[,-1]


##Save phenotype file
saveRDS(phenotype, file = "~/NIAGADS/DATA/phenotype.rds")


###########
library(Biobase)

# Add PCs to dataframe
pca <- readRDS("/nfs/beluga0_home/ANALYSIS/NIAGADS/NG00020/pcs_grm_pheno_only/out/b_pcair.rds")


##The null model requires a sample ID column:
phenotype$sample.id <- phenotype$SUBJ_NO

##Read in PCA covariates -will read in 8 but expect to use 4 (based on: file:///C:/Users/hking/OneDrive/my%20documents/UW/thesis%20and%20research/NIAGADS/NG00020_setup.html)
pcs.df <- as.data.frame(pca$vectors[,1:8])
colnames(pcs.df) <- c("PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8")

pcs.df$sample.id <- row.names(pcs.df)

#Add PCA covariates to phenotype data of interest by subject number
merged_phen <- merge(phenotype[, c("sample.id", "SEX", "Case_Control", "ConType", "BirthYr", "AgeDeath", "Race", "Hispanic", "E2", "E4", "E3", "E4_carrier", "E4_het_hom", "censored_age", "surv", "Dev_Res")], pcs.df, by = "sample.id", all.x=TRUE)
sum(is.na(merged_phen$PC1))
#[1] 660

#order annotated df to match order of gds ids
merged_phen <- merged_phen[match(gds.id, merged_phen$sample.id),]
identical(merged_phen$sample.id, as.character(gds.id))

colnames(merged_phen)

##annotate data:
metadata <- data.frame(labelDescription = c(
  "sample.id",
  "sex (1= male, 0 = female)",
  "case-control status",
  "ConType",
  "birth year",
  "age at death",
  "reported race",
  "reported hispanic status",
  "count of E2 allele",
  "count of E4 allele",
  "count of E3 allele",
  "whether they are a carrier of the E4 allele (1 = heterozygous or homozygous for E4)",
  "whether they are a heterozygote (0) or homozygote (1) for E4 allele; homozygote for non-E4 = NA",
  "age censored; estimated age of symptom onset (AgeDem) for cases; AgeAtLastEval or (if not available) Sampled.Age for controls",
  "first principal component",
  "second principle component",
  "third principle component",
  "fourth principle component",
  "fifth principle component",
  "sixth principle component",
  "seventh principle component",
  "eighth principle component",
  "survival time",
  "deviance residuals from survival data"
))


#Generate annotated dataframe
annot <- AnnotatedDataFrame(merged_phen, metadata)

#Save annot as an R object
saveRDS(annot, file = "~/NIAGADS/DATA/annot.rds")

head(pData(annot))




#########



################
#Check that samples match between PCs, grm, gds, and pehnotype file
#& update samples to exclude list based on sample missing in gds

#Read in list of samples that have phenotypes (and were incldued in PCs and GRM
samples_w_phenotype <- readRDS("/nfs/beluga0_home/ANALYSIS/NIAGADS/NG00020/pcs_grm_pheno_only/out/pheno_list.rds")
length(samples_w_phenotype)
#[1] 4562

#Are these the phenotypes used to generate PC-Air?
pcair <- readRDS("/nfs/beluga0_home/ANALYSIS/NIAGADS/NG00020/pcs_grm_pheno_only/out/b_pcair.rds")
sum(pcair$sample.id %in% samples_w_phenotype) == sum(samples_w_phenotype %in% pcair$sample.id)
#Yes, all the same people are in both, but one extra person is in samples_w_phenotype
not_in_PCs <- samples_w_phenotype[samples_w_phenotype %notin% pcair$sample.id]
not_in_PCs
#[1] "226701"

#Compair against samples in gds file.
library(SeqArray)
gds <- seqOpen("/nfs/beluga0_home/ANALYSIS/NIAGADS/NG00020/LOAD_families_010413_genotyped.gds")
gds.id <- seqGetData(gds, "sample.id")
length(gds.id)
#[1] 5221



#Update samples_w_phenotype to exclude other samples that won't be included in analysis (some of this is redundant because they will have NAs in outcome)
keep_samples_F508_count <-samples_w_phenotype[samples_w_phenotype %notin% not_in_PCs & samples_w_phenotype %notin% id_missing]
#This excludes 1 person who was in the samples_w_phenotype file but not the PCs (the 1 person who was in the gds but not the phenotype file (so will be NA for all outcomes) is already excluded)

saveRDS(as.integer(keep_samples_F508_count), "~/NIAGADS/DATA/keep_samples_F508_count.rds")
length(keep_samples_F508_count)
#[1] 4561


#Make a second vector excluding individuals without censored age (I will use this for all analyses in order to have a consistant sample dataset
keep_samples_censored_analyses <-samples_w_phenotype[samples_w_phenotype %notin% not_in_PCs & samples_w_phenotype %notin% id_missing & samples_w_phenotype %notin% exclude_from_AD_AAO]

saveRDS(as.integer(keep_samples_censored_analyses), "~/NIAGADS/DATA/keep_samples_censored_analyses.rds")
length(keep_samples_censored_analyses)
#[1] 4411

